Tuning hyper-parameters for precision
Best parameters set found on development set:


{'kernel': 'rbf', 'C': 1000, 'gamma': 0.01}


Grid scores on development set:


0.829 (+/-0.135) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 0.01}

0.855 (+/-0.092) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 0.1}

0.853 (+/-0.067) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 1.0}

0.791 (+/-0.104) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 10.0}

0.664 (+/-0.231) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 100.0}

0.860 (+/-0.101) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.01}

0.862 (+/-0.098) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.1}

0.849 (+/-0.085) for {'kernel': 'rbf', 'C': 1, 'gamma': 1.0}

0.787 (+/-0.061) for {'kernel': 'rbf', 'C': 1, 'gamma': 10.0}

0.650 (+/-0.158) for {'kernel': 'rbf', 'C': 1, 'gamma': 100.0}

0.858 (+/-0.085) for {'kernel': 'rbf', 'C': 10, 'gamma': 0.01}

0.851 (+/-0.075) for {'kernel': 'rbf', 'C': 10, 'gamma': 0.1}

0.832 (+/-0.069) for {'kernel': 'rbf', 'C': 10, 'gamma': 1.0}

0.742 (+/-0.068) for {'kernel': 'rbf', 'C': 10, 'gamma': 10.0}

0.641 (+/-0.137) for {'kernel': 'rbf', 'C': 10, 'gamma': 100.0}

0.864 (+/-0.093) for {'kernel': 'rbf', 'C': 100, 'gamma': 0.01}

0.854 (+/-0.058) for {'kernel': 'rbf', 'C': 100, 'gamma': 0.1}

0.817 (+/-0.075) for {'kernel': 'rbf', 'C': 100, 'gamma': 1.0}

0.732 (+/-0.096) for {'kernel': 'rbf', 'C': 100, 'gamma': 10.0}

0.641 (+/-0.137) for {'kernel': 'rbf', 'C': 100, 'gamma': 100.0}

0.864 (+/-0.084) for {'kernel': 'rbf', 'C': 1000, 'gamma': 0.01}

0.849 (+/-0.066) for {'kernel': 'rbf', 'C': 1000, 'gamma': 0.1}

0.768 (+/-0.110) for {'kernel': 'rbf', 'C': 1000, 'gamma': 1.0}

0.741 (+/-0.101) for {'kernel': 'rbf', 'C': 1000, 'gamma': 10.0}

0.641 (+/-0.137) for {'kernel': 'rbf', 'C': 1000, 'gamma': 100.0}

0.856 (+/-0.073) for {'kernel': 'linear', 'C': 0.1}

0.858 (+/-0.061) for {'kernel': 'linear', 'C': 1}

0.860 (+/-0.068) for {'kernel': 'linear', 'C': 10}

0.860 (+/-0.068) for {'kernel': 'linear', 'C': 100}

0.860 (+/-0.068) for {'kernel': 'linear', 'C': 1000}

Tuning hyper-parameters for recall


Best parameters set found on development set:


{'kernel': 'rbf', 'C': 100, 'gamma': 0.01}


Grid scores on development set:


0.818 (+/-0.141) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 0.01}

0.850 (+/-0.100) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 0.1}

0.848 (+/-0.073) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 1.0}

0.777 (+/-0.122) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 10.0}

0.522 (+/-0.033) for {'kernel': 'rbf', 'C': 0.1, 'gamma': 100.0}

0.858 (+/-0.106) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.01}

0.858 (+/-0.107) for {'kernel': 'rbf', 'C': 1, 'gamma': 0.1}

0.845 (+/-0.096) for {'kernel': 'rbf', 'C': 1, 'gamma': 1.0}

0.777 (+/-0.060) for {'kernel': 'rbf', 'C': 1, 'gamma': 10.0}

0.613 (+/-0.125) for {'kernel': 'rbf', 'C': 1, 'gamma': 100.0}

0.855 (+/-0.093) for {'kernel': 'rbf', 'C': 10, 'gamma': 0.01}

0.848 (+/-0.080) for {'kernel': 'rbf', 'C': 10, 'gamma': 0.1}

0.828 (+/-0.075) for {'kernel': 'rbf', 'C': 10, 'gamma': 1.0}

0.735 (+/-0.064) for {'kernel': 'rbf', 'C': 10, 'gamma': 10.0}

0.608 (+/-0.103) for {'kernel': 'rbf', 'C': 10, 'gamma': 100.0}

0.860 (+/-0.100) for {'kernel': 'rbf', 'C': 100, 'gamma': 0.01}

0.850 (+/-0.063) for {'kernel': 'rbf', 'C': 100, 'gamma': 0.1}

0.812 (+/-0.082) for {'kernel': 'rbf', 'C': 100, 'gamma': 1.0}

0.725 (+/-0.094) for {'kernel': 'rbf', 'C': 100, 'gamma': 10.0}

0.608 (+/-0.103) for {'kernel': 'rbf', 'C': 100, 'gamma': 100.0}

0.860 (+/-0.093) for {'kernel': 'rbf', 'C': 1000, 'gamma': 0.01}

0.845 (+/-0.068) for {'kernel': 'rbf', 'C': 1000, 'gamma': 0.1}

0.762 (+/-0.111) for {'kernel': 'rbf', 'C': 1000, 'gamma': 1.0}

0.735 (+/-0.102) for {'kernel': 'rbf', 'C': 1000, 'gamma': 10.0}

0.608 (+/-0.103) for {'kernel': 'rbf', 'C': 1000, 'gamma': 100.0}

0.853 (+/-0.083) for {'kernel': 'linear', 'C': 0.1}

0.855 (+/-0.068) for {'kernel': 'linear', 'C': 1}

0.858 (+/-0.072) for {'kernel': 'linear', 'C': 10}

0.858 (+/-0.072) for {'kernel': 'linear', 'C': 100}

0.858 (+/-0.072) for {'kernel': 'linear', 'C': 1000}


